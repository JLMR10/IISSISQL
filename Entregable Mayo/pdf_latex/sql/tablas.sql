DROP TABLE ALBARAN;
DROP TABLE ASOCIACION_PRODUCTO_TRASPASO;
DROP TABLE ASOCIACION_PRODUCTO_SOLICITUD;
DROP TABLE ASOCIACION_PEDIDO_PRODUCTO;
DROP TABLE ASOCIACION_VENTA_PRODUCTO;
DROP TABLE FACTURA;
DROP TABLE VENTA;
DROP TABLE PEDIDO;
DROP TABLE PROVEEDOR;
DROP TABLE STOCK;
DROP TABLE PRODUCTO;
DROP TABLE TRASPASO;
DROP TABLE SOLICITUD_TRASPASO;
DROP TABLE SOCIO;
DROP TABLE EMPLAZAMIENTO;


CREATE TABLE EMPLAZAMIENTO(
  ID_Emplazamiento int PRIMARY KEY,
  Direccion VARCHAR2(100) NOT NULL,
  Telefono NUMBER(9),
  Tipo VARCHAR2(10) CHECK( Tipo IN('TIENDA','ALMACEN'))
);

CREATE TABLE SOCIO (
  Nombre VARCHAR2(25) NOT NULL,
  Apellidos VARCHAR2(50) NOT NULL,
  Direccion VARCHAR2(200) NOT NULL,
  FechaDeNacimiento DATE NOT NULL,
  Email VARCHAR2(50) NOT NULL,
  DNI VARCHAR2(9) PRIMARY KEY
);

CREATE TABLE VENTA (
  ID_VENTA int PRIMARY KEY,
  PrecioTotal Number NOT NULL,
  FechaVenta DATE NOT NULL,
  DNI VARCHAR2(9),
  FOREIGN KEY(DNI) REFERENCES SOCIO
);

CREATE TABLE FACTURA (
  ID_FACTURA int PRIMARY KEY,
  PrecioTotal Number,
  FechaDeExpedicion DATE DEFAULT SYSDATE,
  Devuelto VARCHAR2(1) CHECK( Devuelto IN('F','T')),
  ID_Venta int,
  ID_Emplazamiento int,
  FOREIGN KEY (ID_Venta) REFERENCES VENTA,
  FOREIGN KEY (ID_Emplazamiento) REFERENCES Emplazamiento
);

CREATE TABLE PROVEEDOR (
    CIF VARCHAR2(9) PRIMARY KEY,
    Nombre VARCHAR2(75) NOT NULL,
    Telefono NUMBER(9) NOT NULL,
    Email VARCHAR2(50) NOT NULL
);

CREATE TABLE PEDIDO(
ID_Pedido int PRIMARY KEY,
FechaPedido DATE NOT NULL,
PrecioTotal NUMBER NOT NULL,
ID_Emplazamiento int,
CIF VARCHAR2(9),
FOREIGN KEY (CIF) REFERENCES PROVEEDOR,
FOREIGN KEY (ID_Emplazamiento) REFERENCES EMPLAZAMIENTO
);

CREATE TABLE ALBARAN (
ID_Albaran int NOT NULL,
FechaFirma DATE NOT NULL,
PrecioTotal NUMBER NOT NULL,
ID_Pedido INT PRIMARY KEY,
FOREIGN KEY (ID_Pedido) REFERENCES PEDIDO);


CREATE TABLE PRODUCTO(
    ID_Producto int PRIMARY KEY,
    Nombre VARCHAR2(50) NOT NULL,
    Descripcion VARCHAR2(300) NOT NULL,
    Categoria VARCHAR2(20) CHECK ( Categoria IN ('Abrigo','Chaquetas','Camisas'
                            ,'Camisetas','Jerseys','Vestidos','Faldas'
                            ,'Pantalones','Calzado','Accesorios','Bisuteria')),
    PrecioProducto NUMBER NOT NULL,
    IVA NUMBER NOT NULL
);

CREATE TABLE STOCK(
    ID_Emplazamiento int,
    ID_Producto int,
    PRIMARY KEY (ID_Emplazamiento, ID_Producto),
    Cantidad NUMBER(6) NOT NULL,
    FOREIGN KEY (ID_Emplazamiento) REFERENCES EMPLAZAMIENTO,
    FOREIGN KEY (ID_Producto) REFERENCES PRODUCTO
);

CREATE TABLE ASOCIACION_PEDIDO_PRODUCTO(
    ID_PEDIDO int,
    ID_PRODUCTO int,
    PRIMARY KEY (ID_PEDIDO, ID_PRODUCTO),
    Cantidad NUMBER(10) NOT NULL,
    PrecioCompra NUMBER NOT NULL,
    IVA NUMBER NOT NULL,
    PrecioLinea NUMBER,
    FOREIGN KEY (ID_PEDIDO) REFERENCES PEDIDO,
    FOREIGN KEY (ID_PRODUCTO) REFERENCES PRODUCTO
);

CREATE TABLE TRASPASO(
    ID_Traspaso int PRIMARY KEY,
    FechaTraspaso DATE NOT NULL,
    ID_EmplazamientoSalida int,
    ID_EmplazamientoEntrada int,
    FOREIGN KEY(ID_EmplazamientoSalida) REFERENCES EMPLAZAMIENTO,
    FOREIGN KEY(ID_EmplazamientoEntrada) REFERENCES EMPLAZAMIENTO
);

CREATE TABLE ASOCIACION_PRODUCTO_TRASPASO(
    ID_Traspaso int,
    ID_Producto int,
    PRIMARY KEY (ID_Producto, ID_Traspaso),
    Cantidad NUMBER(10) NOT NULL,
    FOREIGN KEY(ID_Traspaso) REFERENCES TRASPASO,
    FOREIGN KEY(ID_Producto) REFERENCES producto
);




CREATE TABLE SOLICITUD_TRASPASO(
    ID_Solicitud int PRIMARY KEY,
    FechaSolicitud DATE NOT NULL,
    ID_EmplazamientoSalida int,
    ID_EmplazamientoEntrada int,
    FOREIGN KEY(ID_EmplazamientoSalida) REFERENCES EMPLAZAMIENTO,
    FOREIGN KEY(ID_EmplazamientoEntrada) REFERENCES EMPLAZAMIENTO
);

CREATE TABLE ASOCIACION_PRODUCTO_SOLICITUD(
    ID_Solicitud int,
    ID_Producto int,
    PRIMARY KEY (ID_Producto, ID_Solicitud),
    Cantidad NUMBER(10) NOT NULL,
    FOREIGN KEY(ID_Solicitud) REFERENCES SOLICITUD_TRASPASO,
    FOREIGN KEY(ID_Producto) REFERENCES producto
);
CREATE TABLE ASOCIACION_VENTA_PRODUCTO(
    ID_Venta int,
    ID_Producto int,
    PRIMARY KEY (ID_Venta, ID_Producto),
    FOREIGN KEY (ID_Venta) REFERENCES VENTA,
    FOREIGN KEY (ID_Producto) REFERENCES PRODUCTO,
    Cantidad NUMBER(6),
    PrecioVenta NUMBER,
    IvaVenta NUMBER,
    PrecioLinea Number
);

/* SECUENCIAS */

DROP SEQUENCE S_ID_Producto;
DROP SEQUENCE S_ID_Traspaso;
DROP SEQUENCE S_ID_Solicitud;
DROP SEQUENCE S_ID_Pedido;
DROP SEQUENCE S_ID_Albaran;
DROP SEQUENCE S_ID_Factura;
DROP SEQUENCE S_ID_Emplazamiento;
DROP SEQUENCE S_ID_Venta;




CREATE SEQUENCE S_ID_Emplazamiento START WITH 1 INCREMENT BY 1 MAXVALUE 9999;
CREATE SEQUENCE S_ID_Venta START WITH 1 INCREMENT BY 1 MAXVALUE 9999;
CREATE SEQUENCE S_ID_Pedido START WITH 1 INCREMENT BY 1 MAXVALUE 9999;
CREATE SEQUENCE S_ID_Albaran START WITH 1 INCREMENT BY 1 MAXVALUE 9999;
CREATE SEQUENCE S_ID_Producto START WITH 1 INCREMENT BY 1 MAXVALUE 9999;
CREATE SEQUENCE S_ID_Traspaso START WITH 1 INCREMENT BY 1 MAXVALUE 9999;
CREATE SEQUENCE S_ID_Solicitud START WITH 1 INCREMENT BY 1 MAXVALUE 9999;
CREATE SEQUENCE S_ID_Factura START WITH 1 INCREMENT BY 1 MAXVALUE 9999;

CREATE OR REPLACE TRIGGER crea_ID_Pedido
BEFORE INSERT ON Pedido
FOR EACH ROW
BEGIN
SELECT S_ID_Pedido.NEXTVAL INTO:NEW.ID_Pedido FROM DUAL;
END crea_ID_Pedido;

/

CREATE OR REPLACE TRIGGER crea_ID_Albaran
BEFORE INSERT ON ALBARAN
FOR EACH ROW
BEGIN
SELECT S_ID_Albaran.NEXTVAL INTO:NEW.ID_Albaran FROM DUAL;
END crea_ID_Albaran;

/

CREATE OR REPLACE TRIGGER Crea_Nuevo_Producto
BEFORE INSERT ON PRODUCTO
FOR EACH ROW
BEGIN
SELECT S_ID_Producto.NEXTVAL INTO:NEW.ID_Producto FROM DUAL;
END Crea_Nuevo_Producto;

/

CREATE OR REPLACE TRIGGER Crea_Nuevo_Traspaso
BEFORE INSERT ON TRASPASO
FOR EACH ROW
BEGIN
SELECT S_ID_Traspaso.NEXTVAL INTO:NEW.ID_Traspaso FROM DUAL;
END Crea_Nuevo_Traspaso;

/

CREATE OR REPLACE TRIGGER Crea_Nuevo_Solicitud
BEFORE INSERT ON SOLICITUD_TRASPASO
FOR EACH ROW
BEGIN
SELECT S_ID_Solicitud.NEXTVAL INTO:NEW.ID_Solicitud FROM DUAL;
END Crea_Nuevo_Solicitud;

/

CREATE OR REPLACE TRIGGER crea_ID_Factura
BEFORE INSERT ON FACTURA
    FOR EACH ROW
        BEGIN
        SELECT S_ID_Factura.NEXTVAL INTO:NEW.ID_Factura FROM DUAL;
END crea_ID_Factura;

/

CREATE OR REPLACE TRIGGER crea_ID_Emplazamiento
  BEFORE INSERT ON EMPLAZAMIENTO
  FOR EACH ROW
  BEGIN
    SELECT S_ID_Emplazamiento.NEXTVAL
    INTO :NEW.ID_Emplazamiento FROM DUAL;
END crea_ID_Emplazamiento;
/

CREATE OR REPLACE TRIGGER crea_ID_Venta
  BEFORE INSERT ON Venta
  FOR EACH ROW
  BEGIN
    SELECT S_ID_Venta.NEXTVAL
    INTO :NEW.ID_Venta FROM DUAL;
END crea_ID_Venta;
/
